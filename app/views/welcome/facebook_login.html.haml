= render "back_link"

- if ! @errors.blank?
  .error-summary
    %h1.heading-medium.error-summary-heading
      There was a problem
    %p Please amend the following details:
    %ul.error-summary-list
      - @errors.each do |k,v|
        %li.error-message
          %a{href: "#" + k.to_s, "data-turbolinks" => "false"} #{v}

%h1.heading-large Facebook login

%fb:login-button{scope: "public_profile,email", onlogin: "checkLoginState();", "data-size": "xlarge", "data-show-faces": "false", "data-auto-logout-link": "true", "data-max-rows": "5"}

=# link_to "Logout", "", :onclick => "logout(); return false"

=# link_to "Login", "", :onclick => "login(); return false"

.fb-login-button= content_tag :div, nil, "data-max-rows": "5", "data-size": "xlarge", "data-show-faces": "true", "data-auto-logout-link": "true"

%p
  = content_tag :div, nil, id: "status"

= content_tag :div, nil, id: "fb-root"

= form_tag welcome_facebook_login_path do
  = hidden_field_tag :id
  = hidden_field_tag :first_name
  = hidden_field_tag :last_name
  = hidden_field_tag :age_range_min
  = hidden_field_tag :email
  = hidden_field_tag :updated_time
  = hidden_field_tag :picture

  %p= submit_tag 'Continue', class: 'button'
:javascript
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1793521167634673',
    cookie     : true,  // enable cookies to allow the server to access
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.8' // use graph api version 2.8
  });

  // Now that we've initialized the JavaScript SDK, we call
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);


      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });

    FB.api('/me', {fields: 'id,first_name,last_name,age_range,email,updated_time,picture'}, function(response) {
      document.getElementById("id").value = response.id;
      document.getElementById("first_name").value = response.first_name;
      document.getElementById("last_name").value = response.last_name;
      document.getElementById("age_range_min").value = response.age_range.min;
      document.getElementById("email").value = response.email;
      document.getElementById("updated_time").value = response.updated_time;
      document.getElementById("picture").value = response.picture.data.url;
      console.log(response);
    });
  }

  function logout() {
    FB.logout(function(response) {
    // user is now logged out
      statusChangeCallback(response);
      console.log('logging the user out');
    });
  }

  function login() {
    FB.login(function(response) {
    // user is now logged out
      statusChangeCallback(response);
      console.log('logging the user in');
    }, { auth_type: 'reauthenticate' });
  }
